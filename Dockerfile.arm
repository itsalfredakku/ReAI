# Simplified Dockerfile for ARM/Raspberry Pi
# Build stage
FROM golang:1.22-bullseye AS builder

WORKDIR /app

# Copy go module files first
COPY go.mod ./
COPY go.sum* ./

# Create go.sum if it doesn't exist and download dependencies
RUN touch go.sum && go mod download

# Copy all source code
COPY . .

# Debug: Check if cmd/server exists and list contents
RUN ls -la . && ls -la cmd/ || echo "cmd directory not found"

# Build with minimal flags
RUN go build -o bin/reai ./cmd/server

# Final stage - use a more compatible base image for ARM
FROM debian:bullseye-slim

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    ca-certificates \
    wget \
    && rm -rf /var/lib/apt/lists/*

# Create app user
RUN useradd -r -u 1001 -m reai

WORKDIR /app

# Copy binary
COPY --from=builder /app/bin/reai .

# Set permissions
RUN mkdir -p /app/data && \
    chown -R reai:reai /app

USER reai

EXPOSE 8080

ENV PORT=8080
ENV DATA_DIR=/app/data
ENV LOG_LEVEL=info

# Simplified health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=40s --retries=3 \
    CMD wget --quiet --tries=1 --spider http://localhost:${PORT}/health || exit 1

CMD ["./reai"]
