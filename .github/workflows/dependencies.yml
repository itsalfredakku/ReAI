name: Dependency Updates

on:
  schedule:
    # Run every Monday at 9 AM UTC
    - cron: '0 9 * * 1'
  workflow_dispatch: # Allow manual trigger

jobs:
  update-dependencies:
    name: Update Go Dependencies
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Update dependencies
      run: |
        go get -u ./...
        go mod tidy

    - name: Check for changes
      id: changes
      run: |
        if git diff --quiet; then
          echo "changed=false" >> $GITHUB_OUTPUT
        else
          echo "changed=true" >> $GITHUB_OUTPUT
        fi

    - name: Create Pull Request
      if: steps.changes.outputs.changed == 'true'
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: 'chore: update Go dependencies'
        title: 'chore: update Go dependencies'
        body: |
          This PR updates Go dependencies to their latest versions.
          
          Changes made:
          - Updated all dependencies to latest versions
          - Ran `go mod tidy` to clean up module file
          
          Please review the changes and ensure all tests pass.
        branch: chore/update-dependencies
        delete-branch: true

  update-docker:
    name: Update Docker Base Image
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Check for newer Go version
      id: go-version
      run: |
        # Get current Go version from Dockerfile
        CURRENT_VERSION=$(grep "FROM golang:" Dockerfile | head -1 | sed 's/.*golang:\([0-9.]*\).*/\1/')
        echo "current=$CURRENT_VERSION" >> $GITHUB_OUTPUT
        
        # This is a simplified check - in practice, you might want to check official Go releases
        echo "Current Go version in Dockerfile: $CURRENT_VERSION"

    - name: Update Go version in files
      run: |
        # This is a placeholder - you would implement actual version checking and updating
        echo "Docker base image version check completed"

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.21'

    - name: Run security audit
      run: |
        go install golang.org/x/vuln/cmd/govulncheck@latest
        govulncheck ./...

    - name: Run gosec
      uses: securecodewarrior/github-action-gosec@master
      with:
        args: './...'
