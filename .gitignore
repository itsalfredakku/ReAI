# Binaries for programs and plugins
*.exe
*.exe~
*.dll
*.so
*.dylib
bin/
dist/

# Test binary, built with `go test -c`
*.test

# Output of the go coverage tool, specifically when used with LiteIDE
*.out

# Dependency directories (remove the comment below to include it)
# vendor/

# Go workspace file
go.work
go.work.sum

# Build artifacts
build/
target/

# IDE and editor files
.vscode/
.idea/
*.swp
*.swo
*~
.project
.settings/
*.sublime-project
*.sublime-workspace

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db
*.tmp
*.temp

# Logs
*.log
logs/
log/

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Coverage directory used by tools like istanbul
coverage/
.nyc_output/

# Environment files (contains sensitive data)
.env
.env.local
.env.development.local
.env.test.local
.env.production.local
.envrc

# Application data directory (tokens, cache, etc.)
data/
.local/
token
*.token

# Docker volumes and data
docker-data/
volumes/

# Temporary files
tmp/
temp/
.tmp/

# Database files
*.db
*.sqlite
*.sqlite3

# Backup files
*.bak
*.backup
*~

# Archive files
*.tar
*.tar.gz
*.zip
*.rar

# Certificate files (should not be committed)
*.pem
*.key
*.crt
*.cert
ssl/
certs/

# Configuration files that might contain secrets
config.local.*
config.prod.*
secrets.yaml
secrets.json

# Go mod cache (if using go mod vendor)
# vendor/

# Air live reload tool
.air.toml
tmp/

# Test coverage files
coverage.txt
coverage.html
coverage.xml

# Profiling files
*.prof
*.pprof

# Documentation build artifacts
docs/_build/
site/

# CI/CD artifacts
.github/workflows/secrets.yml

# Local development scripts
dev.*
local.*

# Node modules (if any frontend assets)
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Python (if any Python scripts)
__pycache__/
*.py[cod]
*$py.class
*.so
.Python
env/
venv/
ENV/

# Ruby (if any Ruby scripts)
*.gem
*.rbc
/.config
/coverage/
/InstalledFiles
/spec/reports/
/spec/examples.txt
/test/tmp/
/test/version_tmp/
/tmp/
.bundle/
vendor/bundle
lib/bundler/man/

# Rust (if any Rust components)
target/
Cargo.lock

# Java (if any Java components)
*.class
*.jar
*.war
*.ear
hs_err_pid*

# Local testing and development files
test-*
debug-*
*.local
